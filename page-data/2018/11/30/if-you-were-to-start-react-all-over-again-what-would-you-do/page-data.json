{"componentChunkName":"component---src-templates-types-post-js","path":"/2018/11/30/if-you-were-to-start-react-all-over-again-what-would-you-do/","result":{"data":{"page":{"title":"If you were to start React all over again what would you do? [NSFW]","uri":"/2018/11/30/if-you-were-to-start-react-all-over-again-what-would-you-do/","content":"\n<blockquote class=\"wp-block-quote\"><p>If you were to start react all over again what would you do?</p></blockquote>\n\n\n\n<p>This was a text sent to me by Alvin (not his real name) a software tester, wannabie junior software developer, who has studied the basics of coding including HTML, CSS and Javascript.</p>\n\n\n\n<p>If you don&#8217;t know what that sentence means, probably stop reading now.</p>\n\n\n\n<p>This post is going to get technical. I&#8217;m aiming this blog post at Alvin, so if that doesn&#8217;t sound like you, maybe go do something more important, like having lunch or caring for the people around you.</p>\n\n\n<p><!--more--></p>\n\n\n<p>React is a technology created by Facebook for building websites.</p>\n\n\n\n<p>React is also a technology for building mobile phone apps, using React&#8217;s teenage sister technology React Native.</p>\n\n\n\n<p><strong>TLDR; Too Long Didn&#8217;t Read this blog post? If you are just looking for a <a href=\"#things-to-do-instantly\">quick list resources to start with React, go to the end of this blog post.</a></strong></p>\n\n\n\n<p>Still, here?</p>\n\n\n\n<p>Great!</p>\n\n\n\n<p>Let&#8217;s begin.</p>\n\n\n\n<p>Dear Alvin and Dear reader, here is my answer&#8230;</p>\n\n\n\n<p>Go to a top university and study Computer Science for at least three years, pay particular attention to object oriented programming, and then come back to me.</p>\n\n\n\n<p>Wait, you don&#8217;t have £27,000+ tuition fees, plus living expenses and three years to spare?</p>\n\n\n\n<p>Too bad.&nbsp; I had a lot of fun. Especially the summer BBQs. And the student theatre. And the all nighters doing coding projects in Java or SQL or LISP or something. It all seemed very academic at the time, but over time some of those early lessons have rung true.</p>\n\n\n\n<p>I remember talking to a junior developer in a previous job who had dropped out of computer science at university and come to work for us.</p>\n\n\n\n<p>&#8220;Do they still teach that you should nail down the API before you work on anything else?&#8221; I asked.</p>\n\n\n\n<p>&#8220;Yes&#8221; he said.</p>\n\n\n\n<p>&#8220;So that&#8217;s a piece of advice that is a least 20 years old that this company still isn&#8217;t doing&#8221; I said with quiet resignation.</p>\n\n\n\n<p>So Alvin, given you are not going to spend another three years at university, here is Louie Christie&#8217;s Computer Science degree in a weekend syllabus.</p>\n\n\n\n<p>Bear in mind this is not complete but it is informed by half a life-time so far of studying and working with computers, and observing users of computers. It&#8217;s also irreverent, opinionated, and probably wrong in places*. But it&#8217;s cheaper than £27,000.</p>\n\n\n\n<p>(* See the comment about nailing down the API above if you are a GraphQL aficionado/don&#8217;t like thinking ahead/like doing rework.)</p>\n\n\n\n<h2>Louie Christie&#8217;s Computer Science degree in a weekend syllabus</h2>\n\n\n\n<p>Read Chapter 1: The Tar Pit in the book Mythical Man-Month by Fred Brooks. It was our first bit of reading for my first seminar in week one. If you really can&#8217;t bring yourself to read the chapter, <a href=\"https://en.wikipedia.org/wiki/The_Mythical_Man-Month\">at least look at the picture on the front</a>. It&#8217;s a sabre-tooth tiger drowning in a thick, marmite-like, bog, becoming extinct. The point is, that&#8217;s you. The marmite bog is the career you&#8217;ve just volunteered yourself for, and that sabre-tooth tiger, that&#8217;s you, drowning, head only just above the water of project managers, bad designs, broken dreams, wasted money, and the latest failed National Health Service IT project.</p>\n\n\n\n<p>Right, now Google for an article, that I read before I did my coding boot camp, that I can&#8217;t find any more, if you find it send me the link. @TODO find link@. It was about your personal project, the one with clean code, that you wrote and understand, that is perfectly modular, virtually bug free, and possibly even documented. The point of that article is that any work project is never going to be as pure as that. Other people will get involved, people will tell you to &#8216;hit the ground running&#8217;, that &#8216;we are going through a busy patch&#8217;, that sort of thing, and you&#8217;ll deal with shit code that you hate. Which later you&#8217;ll discover is actually much better than you you thought it was (because it&#8217;s easier to write code than to read it, but that&#8217;s another story.) Great, that&#8217;s your university assignments done.</p>\n\n\n\n<p>Now Google what DRY means (clue &#8211; don&#8217;t repeat yourself.) Now you understand the basics of object-oriented programming. Later in your career people will say things like &#8216;technical debt is acceptable to get a minimum viable product&#8217; or &#8216;deliver as much client value as quickly as possible&#8217; or just &#8216;we don&#8217;t have time&#8217;. When these things happen, you&#8217;re probably going to have to repeat yourself (cut and paste code.) But keep the DRY mantra in mind and when you later deal with the headfuck you&#8217;ve created &#8211; consider then going DRY or changing jobs.</p>\n\n\n\n<p>It was around this time on my university course some grey haired academic told us that Java is a proper object oriented programming language, and JavaScript is a frivolous scripting language that copied the name, was thrown together in ten days, and will never take off. Ignore this advice. Twenty years later it turns out JavaScript is the <a href=\"https://githut.info/\">most used programming language on Github</a>, and in my opinion, in 2018-19, your best bet for getting a job. Also bear in mind that Java is a proper object oriented programming language<sup><a href=\"#footnotes\" data-type=\"internal\" data-id=\"#footnotes\">[1]</a></sup> and JavaScript is a frivolous scripting language that copied the name and was thrown together in ten days.</p>\n\n\n\n<p>Because they sound similar, recruitment consultants will often try and recruit you for the wrong one*. Also, technical mangers will think they are the same thing, especially if they have been working with Java/JavaScript for many years.</p>\n\n\n\n<p>( * See a possible future post on recruitment consultants and &#8216;anything that says Java is gold&#8217;.) </p>\n\n\n\n<p>Also, don&#8217;t create global variables, and don&#8217;t have side effects in your methods or functions*. That&#8217;s because if you do those things your code becomes more of a headfuck. Also I read some article criticising a particular car manufacturer&#8217;s code that had thousands of global variables that were literally a death trap car crash.</p>\n\n\n\n<p>(* Please let me know the difference between a method and a function if you find out. It&#8217;s the sort of tech trivia mid-level programmers love to ask in job interviews, especially if they can catch you out and feel smug. <strong>Update 2021:</strong> Last year I discovered the difference and was going to update it here. But I&#8217;ve since forgotten because it&#8217;s not something I need to know to code React.)</p>\n\n\n\n<p>Basically the idea is that you have separate chucks of code that operate independently and don&#8217;t tinker with each other. Except when you join them together in a system and they pass data between each other in documented, predictable, ways.</p>\n\n\n\n<p>OK, that&#8217;s the rest of object oriented programming covered. And functional programming, which they never taught me twenty years ago, but I learned about it from a couple of younger graduates in the same place we met, a bar at a Silicon Milkroundabout careers event.</p>\n\n\n\n<p>And let&#8217;s be honest, for most of your career you&#8217;ll be copying, pasting, and slightly modifying code from the current codebase or from the internet and will only ever talk about object oriented or functional programming in job interviews, or at the bar.</p>\n\n\n\n<p>Right, now you are ready to use React. Now smarter people than I can tell you whether React is object oriented, functional, prototypical, or following some other paradigm or some bastardisation of them all (reactive?).</p>\n\n\n\n<p class=\"has-light-gray-background-color has-background\"><strong>Update: May 19</strong> &#8211; I spoke to one of those nice Finish guys at the tech consultancy Futurice. It <em><strong>is</strong></em> reactive. Which the Fin and I discussed (turns out since the demise of the wonderful Nokia 3210 phone, the Fins who were made redundant haven&#8217;t disappeared, but have been busy setting up tech consultancies amongst other things.) The Fin and I reckoned Reactive is probably what a white bearded developer I met at a tech event in Croydon said when I explained React to him: a re-hasing of an old idea &#8211; the <a href=\"http://wiki.c2.com/?ObserverPattern\">Observer Pattern</a>. But, as the Fin said, it&#8217;s <a href=\"http://wiki.c2.com/?ObserverPattern\">Observer Pattern</a> for the fashionable Functional Programming Paradigm, because functions are easy to test, but you end up with a lot of functions and it gets complicated, so you need Reactive. Alvin&#8230; it doesn&#8217;t matter if you don&#8217;t understand any of this paragraph up to this point. Just be aware, that just because an idea in technology is old, you don&#8217;t have to automatically reject it, like a <a href=\"https://www.infoq.com/articles/agile-teenage-crisis\">teenager</a> rejects old ideas. Even if a lot of your co-workers <em><strong>are</strong></em> teenagers, prodigies, or Mark Zuckerberg. </p>\n\n\n\n<p class=\"has-light-gray-background-color has-background\"><strong>Update 20:</strong> An alternative Fin consultant told me React is <em>not</em> reactive &#8211; go figure 🤷‍♂️.<br><br><strong>Update March &#8217;21:</strong> I found a guy at Netlify did a very long complicated talk about <a href=\"https://twitter.com/sebastienlorber/status/1368977322817318919?s=20\">why React is not reactive</a>. If you understand it, do tell me.</p>\n\n\n\n<p>But I think most people would agree that react is built up of components.</p>\n\n\n\n<p>This is a good thing.</p>\n\n\n\n<p>It means you can work on one thing, a big blue submit button for example, with less of a chance of accidentally breaking another button, or breaking the whole app, or launching a nuke, or loosing $100,000 dollars a second by changing the<a href=\"https://dougseven.com/2014/04/17/knightmare-a-devops-cautionary-tale/\"> powerpeg variable</a>.</p>\n\n\n\n<p>(Although people argue a lot about <a href=\"https://www.g2i.co/blog/react-separation-of-concerns\">separation of concerns</a>, how to divide up code, and &#8220;can&#8217;t we just go back to the good old days of HTML and CSS files.&#8221;)</p>\n\n\n\n<p>In theory your components won&#8217;t have global variables or side effects. In reality they will probably have some global things, like the particular shade of red the marketing department wants you to use for the company logo.</p>\n\n\n\n<p>If you are lucky they will actually provide you with a standard # hex colour code, but equally you might get a various similar, but not exactly the same colours from different designers, marketers, managers, in CMY &#8211; which is designed for printing and has no agreed way to display on screen. You&#8217;ll also get a ton of different but almost exactly the same shades of grey. These are your global variables. Try and keep them to a minimum, hopefully no-one&#8217;s life will depend on it, unless you work in advertising, in which case someone probably has had stomach ulcer over that shade of red at some point.</p>\n\n\n\n<p>At this point it is important to remember that nailing down an exact colour is both technically easy (but office politically difficult) and it&#8217;s not that important to customers, because it&#8217;s all relative, changes depending on the printer used, light in the room, <a href=\"https://en.wikipedia.org/wiki/The_dress#/media/File:The_Dress_(viral_phenomenon).png\">a blue and black dress looks gold and white</a>, etc. Unless you are colour blind. In which case a green button for a save button and a red button for a delete button look the same. Also a red button for self-destruct the nuclear power station will look the same. (So you may want to put different beer taps on identical power station buttons to stop that happening, see <a href=\"https://en.wikipedia.org/wiki/The_Design_of_Everyday_Things\">The Design of Everyday Things</a> book by Don Norman. (Professor and director of the Design Lab at the University of California, San Diego and <a href=\"https://www.fastcompany.com/3053406/how-apple-is-giving-design-a-bad-name\">former vice president at Apple</a>.)</p>\n\n\n\n<p>However that&#8217;s for another possible blog post on the weekend syllabus to MSc in Human-Centred Computer Systems and User Experience.</p>\n\n\n\n<p>React&#8230; back to React. What does this have to do with React? Well&#8230;</p>\n\n\n\n<h2><strong>The Holy Grail</strong></h2>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>&#8220;Play with <a href=\"https://snack.expo.io/@louiechristie/basic-tabbed-view\">Expo Snack</a>.&#8221;</p></blockquote>\n\n\n\n<p>&#8220;Play with <a href=\"https://snack.expo.io/@louiechristie/basic-tabbed-view\">Expo Snack</a>.&#8221; This was almost the reply I sent immediately to your text of &#8220;if you were to start react all over again what would you do?&#8221;.</p>\n\n\n\n<p>It was the first thing that came to mind. Before I thought about it, and ended up writing the nebulous Winter 2018 series of blog posts up to this one.</p>\n\n\n\n<p><a href=\"https://snack.expo.io/@louiechristie/basic-tabbed-view\">Expo Snack</a> is actually not even using straight React, it&#8217;s using React Native. But the basics are the same and it has some benefits, not least that you can edit code on your computer, and see the results on your phone, without pesky adjusting windows or swiping between desktops. And you can make cross-platform apps and websites with React Native for Web with the same code-base, but that&#8217;s a subject for another blog post.</p>\n\n\n\n<p>See the button on the right that says something like &#8216;Tap to play&#8217;. Never press that. It rarely works, or you have to wait in a queue for ages and I think they limit your usage, so just get in the habit of using the &#8216;Run on your device&#8217; button.</p>\n\n\n\n<p>It works by you installing the Expo app on your phone, and then you scanning a QR code. For iOS, Expo Snack implies you can&#8217;t use QR codes. Ignore that. It&#8217;s just poorly worded. You can, you just need to open the official apple camera app (and not Expo app) and point it at the QR code.</p>\n\n\n\n<p>Anyway, the a nice thing about Expo Snack is that it has a search bar on the right and a load of components that you can drag and drop into your code. Which illustrates my point about components. Except that it isn&#8217;t working any more, bollocks, but it&#8217;s probably for the best. So you&#8217;ll have to look at the gif halfway through <a href=\"https://blog.expo.io/sketch-a-playground-for-react-native-16b2401f44a2\">this blog post from last Summer 2017</a> instead.</p>\n\n\n\n<p>Look! Someone dragging and dropping code around. Like magic. Slotting pieces together like Lego. This is the holy grail. Re-usable components. That do one thing each. That can work together. Without weird bugs, crashes, global variables or side-effects. Without headfuckery, without losing billions of dollars on the stock market in seconds, or blowing up Chernobyl.</p>\n\n\n\n<p>Edit code visually, like slotting together Lego? Sadly React is not that. The closest I&#8217;ve seen (that actually works, and isn&#8217;t some bastard absolute positioned, un-semantic, hack, that won&#8217;t work on different sized screens) is Scratch for kids, <a href=\"https://www.dkfindout.com/uk/computer-coding/how-do-i-start-coding/\">see this video on DK Findout! </a>(a children&#8217;s encyclopaedia website I once worked on, I hope kids are reading that, and not this.) </p>\n\n\n\n<p>Possibly we&#8217;ll never get* to editing code visually because of paradigm shifts and <a href=\"https://www.joelonsoftware.com/2002/11/11/the-law-of-leaky-abstractions/\">The Law of Leaky Abstractions</a>. (2021 @TODO find the xkcd comic about visual code and defining specifications.)</p>\n\n\n\n<p>* get back to</p>\n\n\n\n<figure class=\"wp-block-embed is-type-rich is-provider-twitter wp-block-embed-twitter\"><div class=\"wp-block-embed__wrapper\">\n<blockquote class=\"twitter-tweet\" data-width=\"550\" data-dnt=\"true\"><p lang=\"en\" dir=\"ltr\">The React Roadmap <a href=\"https://t.co/3y7mOxcOoR\">pic.twitter.com/3y7mOxcOoR</a></p>&mdash; Dan Abramov (@dan_abramov) <a href=\"https://twitter.com/dan_abramov/status/1191830140713496581?ref_src=twsrc%5Etfw\">November 5, 2019</a></blockquote><script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n</div></figure>\n\n\n\n<p>React isn&#8217;t the holy grail. But it&#8217;s close, and it&#8217;s in the right direction. See&nbsp;Jani Eväkallio&#8217;s talk on the&nbsp;<a href=\"https://www.youtube.com/watch?v=HGf89S1N930\">Future of UI Development</a>.</p>\n\n\n\n<h2>Look at the jigsaw puzzle box picture</h2>\n\n\n\n<p>I was also going to text you about looking at some decent open source React code. Personally I think before you do a jigsaw, you should look at the picture on the box. And likewise, before you code React, look at some quality React code, like <a href=\"http://todomvc.com/\">todoMVC</a>, if it had a Redux or <a href=\"https://slides.com/kadikraman/offline-first#/\">apollo-graph-persist</a> version <s>but it looks like I&#8217;ll have to cover that in another post</s> update 2021: it has at least one of those now now. You don&#8217;t have to understand the code. But just take a peek. Think of it as inspiration. Especially look back when you are having a bad day at work, and remind yourself that clean code does exist, somewhere, out there. I wish I&#8217;d known about todoMVC earlier, and that it was a cloud data driven multi-page thing, more like a real world website you might work on.</p>\n\n\n\n<p>Actually something like that exists from <a href=\"https://github.com/gothinkster/react-redux-realworld-example-app\">Thinkster&nbsp;here.</a> Look at it, bathe in the sunlight. You&#8217;ll probably never get paid to make clean code like this, and neither will I. But it&#8217;s comforting to know it exists.</p>\n\n\n\n<h2 id=\"things-to-do-instantly\">Things to do instantly</h2>\n\n\n\n<p>Also, here&#8217;s a list of things to do instantly, this list should be like sucking eggs to you, and if you haven&#8217;t done any of them, do them now:</p>\n\n\n\n<ul><li>Read the <a href=\"https://en.wikipedia.org/wiki/React_(JavaScript_library)\">React page on Wikipedia</a></li><li><a href=\"https://reactjs.org/\">Read the basics of React on the official documentation website</a>, but maybe just as far as doing the &#8216;Hello World&#8217; tutorial. There are probably going to be better tutorials elsewhere after that.</li><li>Follow key players in React on twitter, <a href=\"https://twitter.com/dan_abramov\">Dan Abranov</a>, <a href=\"https://twitter.com/jevakallio\">Jani Eväkallio</a>, the<a href=\"http://Nicolas Gallagher\"> guy who built twitter mobile web site</a>, etc.</li><li>Learn about Javascript ES6 arrow functions</li><li>Install Microsoft&#8217;s VS Code, and install the Priettier and ESLint extensions</li><li>Read <a href=\"https://news.ycombinator.com/\">Hacker News</a> regularly</li></ul>\n\n\n\n<p>Also know that <a href=\"https://twitter.com/elibelly/status/1068597896457715712\">Javascript improv</a> is a thing (but more on that in a different blog post):</p>\n\n\n\n<figure class=\"wp-block-embed is-type-rich is-provider-twitter wp-block-embed-twitter\"><div class=\"wp-block-embed__wrapper\">\n<blockquote class=\"twitter-tweet\" data-width=\"550\" data-dnt=\"true\"><p lang=\"en\" dir=\"ltr\">Many many days ago&#8230;<br>A foolish young man by the name of <a href=\"https://twitter.com/ferrannp?ref_src=twsrc%5Etfw\">@ferrannp</a> made a deal with the devil. <br>&quot;If I get 1000 followers, <a href=\"https://twitter.com/ken_wheeler?ref_src=twsrc%5Etfw\">@ken_wheeler</a> can punch me in the face. He&#39;s halfway around the world, surely, we&#39;ll never meet&#8230;&quot;<br><br>I give you the finale of <a href=\"https://twitter.com/hashtag/componentDidSmoosh?src=hash&amp;ref_src=twsrc%5Etfw\">#componentDidSmoosh</a> <a href=\"https://t.co/vlXNac0AOQ\">pic.twitter.com/vlXNac0AOQ</a></p>&mdash; Eli Schutze Ramirez (@elibelly) <a href=\"https://twitter.com/elibelly/status/1068597896457715712?ref_src=twsrc%5Etfw\">November 30, 2018</a></blockquote><script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n</div></figure>\n\n\n\n<h2 id=\"footnotes\">Footnotes</h2>\n\n\n\n<p>[1] Java is trusted by every smart credit card in the world, arguably making it more ubiquitous than JavaScript, and it is used (in a bastardised form according to it&#8217;s creator) on every Android phone &#8211; or you can use JavaScript React Native on Android instead.</p>\n","date":"November 30, 2018","excerpt":"<p>If you were to start react all over again what would you do? This was a text sent to me by Alvin (not his real name) a software tester, wannabie junior software developer, who has studied the basics of coding including HTML, CSS and Javascript. If you don&#8217;t know what that sentence means, probably stop [&hellip;]</p>\n","featuredImage":{"node":{"altText":"","localFile":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/blog/static/b4d77019de6cedb3bc5305e140fdbefe/32a7b/img_2843.png","srcSet":"/blog/static/b4d77019de6cedb3bc5305e140fdbefe/13e9a/img_2843.png 609w,\n/blog/static/b4d77019de6cedb3bc5305e140fdbefe/95c1d/img_2843.png 1218w,\n/blog/static/b4d77019de6cedb3bc5305e140fdbefe/32a7b/img_2843.png 2436w","sizes":"(min-width: 2436px) 2436px, 100vw"},"sources":[{"srcSet":"/blog/static/b4d77019de6cedb3bc5305e140fdbefe/459fb/img_2843.webp 609w,\n/blog/static/b4d77019de6cedb3bc5305e140fdbefe/b7018/img_2843.webp 1218w,\n/blog/static/b4d77019de6cedb3bc5305e140fdbefe/37183/img_2843.webp 2436w","type":"image/webp","sizes":"(min-width: 2436px) 2436px, 100vw"}]},"width":2436,"height":1125}},"publicURL":"/blog/static/b4d77019de6cedb3bc5305e140fdbefe/img_2843.png"},"mediaDetails":{"width":2436,"height":1125}}},"author":{"node":{"name":"Louie Christie","firstName":"Louie","lastName":"Christie","uri":"/author/louiechristie/","description":"Adventurous, tech geek, available to hire, underground comedian in my own head. 😬","avatar":{"url":"http://0.gravatar.com/avatar/f4961bd6f78e6ebb70c62064997391de?s=96&d=mm&r=g","width":96,"height":96,"imageFile":{"childImageSharp":{"gatsbyImageData":{"layout":"fixed","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/blog/static/ffd32b248d79a5230defa7cee1460b01/f2806/f4961bd6f78e6ebb70c62064997391de.jpg","srcSet":"/blog/static/ffd32b248d79a5230defa7cee1460b01/f2806/f4961bd6f78e6ebb70c62064997391de.jpg 80w","sizes":"80px"},"sources":[{"srcSet":"/blog/static/ffd32b248d79a5230defa7cee1460b01/99ff4/f4961bd6f78e6ebb70c62064997391de.webp 80w","type":"image/webp","sizes":"80px"}]},"width":80,"height":80}}}}}},"categories":{"nodes":[{"name":"Rant","slug":"rant","uri":"/category/rant/"},{"name":"web development","slug":"web-development","uri":"/category/web-development/"}]}},"nextPage":{"title":"The world of tech start-ups. A glorious shitshow.","uri":"/2019/10/25/london-tech-day/"},"previousPage":{"title":"No Script Required","uri":"/2008/10/01/no-script-required/"}},"pageContext":{"id":"cG9zdDo0NjY=","nextPage":"cG9zdDoxMTM0","previousPage":"cG9zdDoxNjM="}},"staticQueryHashes":["1304194058","1887704909","2753671558","2891580371","538497232"]}